{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Workspace\\\\PRUEBA TECNICA\\\\frontend\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProductList from './productList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const productData = [{\n    Ean: 'EAN001',\n    nombre_producto: 'Producto 1',\n    datos_query: [{\n      Market: 'Market1',\n      normal_price: 10\n    }, {\n      Market: 'Market2',\n      normal_price: 15\n    }],\n    markets_diferentes: new Set(['Market1', 'Market2']),\n    rango_precios: [10, 15]\n  }, {\n    Ean: 'EAN002',\n    nombre_producto: 'Producto 2',\n    datos_query: [{\n      Market: 'Market2',\n      normal_price: 15\n    }, {\n      Market: 'Market1',\n      normal_price: 20\n    }],\n    markets_diferentes: new Set(['Market2', 'Market1']),\n    rango_precios: [15, 20]\n  }, {\n    Ean: 'EAN003',\n    nombre_producto: 'Producto 3',\n    datos_query: [{\n      Market: 'Market1',\n      normal_price: 20\n    }, {\n      Market: 'Market2',\n      normal_price: 30\n    }],\n    markets_diferentes: new Set(['Market1', 'Market2']),\n    rango_precios: [20, 30]\n  }];\n\n  //   const [originalProducts, setOriginalProducts] = useState(productData);\n  //   const [visibleProducts, setVisibleProducts] = useState(productData);\n  //   const [filter, setFilter] = useState('');\n\n  //   useEffect(() => {\n  //     let timeout;\n\n  //     if (filter !== '') {\n  //       timeout = setTimeout(() => {\n  //         setVisibleProducts((prevVisibleProducts) => {\n  //           const filteredProducts = prevVisibleProducts.slice(0, -1);\n  //           return filteredProducts;\n  //         });\n  //       }, 1000);\n  //     }\n\n  //     // Limpiar el timeout si se desmonta el componente o si se borra el filtro\n  //     return () => clearTimeout(timeout);\n  //   }, [filter]);\n\n  //   const applyFilter = () => {\n  //     // Actualizar el conjunto original al aplicar el filtro\n  //     setOriginalProducts(visibleProducts);\n  //   };\n\n  //   const handleFilterChange = (event) => {\n  //     setFilter(event.target.value);\n  //   };\n\n  //   return (\n  //     <div>\n  //       <h1>Lista de Productos</h1>\n  //       <input\n  //         type=\"text\"\n  //         placeholder=\"Filtrar por nombre\"\n  //         value={filter}\n  //         onChange={handleFilterChange}\n  //       />\n  //       <button onClick={applyFilter}>Aplicar Filtro</button>\n  //       <ProductList products={visibleProducts} />\n  //     </div>\n  //   );\n  // };\n\n  //   const [originalProducts, setOriginalProducts] = useState(productData);\n  //   const [visibleProducts, setVisibleProducts] = useState(productData);\n  //   const [filter, setFilter] = useState('');\n  //   const [isFiltering, setIsFiltering] = useState(false);\n  //   let interval;\n\n  //   useEffect(() => {\n\n  //     if (isFiltering && filter !== '') {\n  //       interval = setInterval(() => {\n  //         setVisibleProducts((prevVisibleProducts) => {\n  //           if (prevVisibleProducts.length > 0) {\n  //             const newVisibleProducts = [...prevVisibleProducts];\n  //             newVisibleProducts.pop();\n  //             return newVisibleProducts;\n  //           }\n  //           return prevVisibleProducts;\n  //         });\n  //       }, 1000);\n  //     }\n\n  //     // Limpiar el intervalo si se desmonta el componente o si se borra el filtro\n  //     return () => clearInterval(interval);\n  //   }, [isFiltering, filter]);\n\n  //   const applyFilter = () => {\n  //     const filteredProducts = originalProducts.filter((product) =>\n  //       product.nombre_producto.toLowerCase().includes(filter.toLowerCase())\n  //     );\n  //     setVisibleProducts(filteredProducts);\n  //     setIsFiltering(true);\n\n  //   };\n\n  //   const handleFilterChange = (event) => {\n  //     setFilter(event.target.value);\n  //     setIsFiltering(false);\n  //   };\n\n  //   return (\n  //     <div>\n  //       <h1>Lista de Productos</h1>\n  //       <input\n  //         type=\"text\"\n  //         placeholder=\"Filtrar por nombre\"\n  //         value={filter}\n  //         onChange={handleFilterChange}\n  //       />\n  //       <button onClick={applyFilter}>Aplicar Filtro</button>\n  //       <ProductList products={visibleProducts} />\n  //     </div>\n  //   );\n  // };\n\n  //   const [originalProducts, setOriginalProducts] = useState(productData);\n  //   const [visibleProducts, setVisibleProducts] = useState(productData);\n  //   const [filter, setFilter] = useState('');\n\n  //   useEffect(() => {\n  //     // Configurar el intervalo solo si no se ha aplicado un filtro\n  //     if (filter === '') {\n  //       const interval = setInterval(() => {\n  //         setVisibleProducts((prevVisibleProducts) => {\n  //           if (prevVisibleProducts.length > 0) {\n  //             const newVisibleProducts = [...prevVisibleProducts];\n  //             newVisibleProducts.pop();\n  //             return newVisibleProducts;\n  //           }\n  //           return prevVisibleProducts;\n  //         });\n  //       }, 1000);\n\n  //       // Limpiar el intervalo al desmontar el componente\n  //       return () => clearInterval(interval);\n  //     }\n  //   }, [filter]);\n\n  //   const applyFilter = () => {\n  //     const filteredProducts = originalProducts.filter((product) =>\n  //       product.nombre_producto.toLowerCase().includes(filter.toLowerCase())\n  //     );\n  //     setVisibleProducts(filteredProducts);\n\n  //     // Limpiar el intervalo si se aplica un filtro\n  //     if (filter !== '') {\n  //       clearInterval(interval);\n  //     }\n  //   };\n\n  //   const handleFilterChange = (event) => {\n  //     setFilter(event.target.value);\n  //   };\n\n  //   return (\n  //     <div>\n  //       <h1>Lista de Productos</h1>\n  //       <input\n  //         type=\"text\"\n  //         placeholder=\"Filtrar por nombre\"\n  //         value={filter}\n  //         onChange={handleFilterChange}\n  //       />\n  //       <button onClick={applyFilter}>Aplicar Filtro</button>\n  //       <ProductList products={visibleProducts} />\n  //     </div>\n  //   );\n  // };\n\n  const [products, setProducts] = useState(productData);\n  const [filter, setFilter] = useState('');\n  const applyFilter = () => {\n    //   setTimeout(() => {\n    //     const filteredProducts = productData.filter((product) =>\n    //       product.nombre_producto.toLowerCase().includes(filter.toLowerCase())\n    //     );\n    //     setProducts(filteredProducts);\n    //   }, 1000);\n    // };\n    const filteredProducts = productData.filter(product => product.nombre_producto.toLowerCase().includes(filter.toLowerCase()));\n    setProducts(filteredProducts);\n    let index = 0;\n    const interval = setInterval(() => {\n      setProducts(prevProducts => {\n        const updatedProducts = [...prevProducts];\n        if (index < updatedProducts.length) {\n          updatedProducts.splice(index, 1);\n          index++;\n        } else {\n          clearInterval(interval);\n        }\n        return updatedProducts;\n      });\n    }, 1000);\n  };\n  useEffect(() => {\n    return () => clearInterval(interval);\n  }, []);\n  const handleFilterChange = event => {\n    setFilter(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Productos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Filtrar por nombre\",\n      value: filter,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: applyFilter,\n      children: \"Aplicar Filtro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n      products: products\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"u8TEKK9XBklYYsKTnBHe7CljaAo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ProductList","jsxDEV","_jsxDEV","App","_s","productData","Ean","nombre_producto","datos_query","Market","normal_price","markets_diferentes","Set","rango_precios","products","setProducts","filter","setFilter","applyFilter","filteredProducts","product","toLowerCase","includes","index","interval","setInterval","prevProducts","updatedProducts","length","splice","clearInterval","handleFilterChange","event","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Desktop/Workspace/PRUEBA TECNICA/frontend/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ProductList from './productList';\r\n\r\nconst App = () => {\r\n  const productData = [\r\n    {\r\n      Ean: 'EAN001',\r\n      nombre_producto: 'Producto 1',\r\n      datos_query: [\r\n        { Market: 'Market1', normal_price: 10 },\r\n        { Market: 'Market2', normal_price: 15 }\r\n      ],\r\n      markets_diferentes: new Set(['Market1', 'Market2']),\r\n      rango_precios: [10, 15]\r\n    },\r\n    {\r\n      Ean: 'EAN002',\r\n      nombre_producto: 'Producto 2',\r\n      datos_query: [\r\n        { Market: 'Market2', normal_price: 15 },\r\n        { Market: 'Market1', normal_price: 20 }\r\n      ],\r\n      markets_diferentes: new Set(['Market2', 'Market1']),\r\n      rango_precios: [15, 20]\r\n    },\r\n    {\r\n      Ean: 'EAN003',\r\n      nombre_producto: 'Producto 3',\r\n      datos_query: [\r\n        { Market: 'Market1', normal_price: 20 },\r\n        { Market: 'Market2', normal_price: 30 }\r\n      ],\r\n      markets_diferentes: new Set(['Market1', 'Market2']),\r\n      rango_precios: [20, 30]\r\n    },\r\n  ];\r\n\r\n//   const [originalProducts, setOriginalProducts] = useState(productData);\r\n//   const [visibleProducts, setVisibleProducts] = useState(productData);\r\n//   const [filter, setFilter] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     let timeout;\r\n\r\n//     if (filter !== '') {\r\n//       timeout = setTimeout(() => {\r\n//         setVisibleProducts((prevVisibleProducts) => {\r\n//           const filteredProducts = prevVisibleProducts.slice(0, -1);\r\n//           return filteredProducts;\r\n//         });\r\n//       }, 1000);\r\n//     }\r\n\r\n//     // Limpiar el timeout si se desmonta el componente o si se borra el filtro\r\n//     return () => clearTimeout(timeout);\r\n//   }, [filter]);\r\n\r\n//   const applyFilter = () => {\r\n//     // Actualizar el conjunto original al aplicar el filtro\r\n//     setOriginalProducts(visibleProducts);\r\n//   };\r\n\r\n//   const handleFilterChange = (event) => {\r\n//     setFilter(event.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Lista de Productos</h1>\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Filtrar por nombre\"\r\n//         value={filter}\r\n//         onChange={handleFilterChange}\r\n//       />\r\n//       <button onClick={applyFilter}>Aplicar Filtro</button>\r\n//       <ProductList products={visibleProducts} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n\r\n\r\n//   const [originalProducts, setOriginalProducts] = useState(productData);\r\n//   const [visibleProducts, setVisibleProducts] = useState(productData);\r\n//   const [filter, setFilter] = useState('');\r\n//   const [isFiltering, setIsFiltering] = useState(false);\r\n//   let interval;\r\n\r\n//   useEffect(() => {\r\n   \r\n\r\n//     if (isFiltering && filter !== '') {\r\n//       interval = setInterval(() => {\r\n//         setVisibleProducts((prevVisibleProducts) => {\r\n//           if (prevVisibleProducts.length > 0) {\r\n//             const newVisibleProducts = [...prevVisibleProducts];\r\n//             newVisibleProducts.pop();\r\n//             return newVisibleProducts;\r\n//           }\r\n//           return prevVisibleProducts;\r\n//         });\r\n//       }, 1000);\r\n//     }\r\n\r\n//     // Limpiar el intervalo si se desmonta el componente o si se borra el filtro\r\n//     return () => clearInterval(interval);\r\n//   }, [isFiltering, filter]);\r\n\r\n//   const applyFilter = () => {\r\n//     const filteredProducts = originalProducts.filter((product) =>\r\n//       product.nombre_producto.toLowerCase().includes(filter.toLowerCase())\r\n//     );\r\n//     setVisibleProducts(filteredProducts);\r\n//     setIsFiltering(true);\r\n\r\n//   };\r\n\r\n//   const handleFilterChange = (event) => {\r\n//     setFilter(event.target.value);\r\n//     setIsFiltering(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Lista de Productos</h1>\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Filtrar por nombre\"\r\n//         value={filter}\r\n//         onChange={handleFilterChange}\r\n//       />\r\n//       <button onClick={applyFilter}>Aplicar Filtro</button>\r\n//       <ProductList products={visibleProducts} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n//   const [originalProducts, setOriginalProducts] = useState(productData);\r\n//   const [visibleProducts, setVisibleProducts] = useState(productData);\r\n//   const [filter, setFilter] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     // Configurar el intervalo solo si no se ha aplicado un filtro\r\n//     if (filter === '') {\r\n//       const interval = setInterval(() => {\r\n//         setVisibleProducts((prevVisibleProducts) => {\r\n//           if (prevVisibleProducts.length > 0) {\r\n//             const newVisibleProducts = [...prevVisibleProducts];\r\n//             newVisibleProducts.pop();\r\n//             return newVisibleProducts;\r\n//           }\r\n//           return prevVisibleProducts;\r\n//         });\r\n//       }, 1000);\r\n\r\n//       // Limpiar el intervalo al desmontar el componente\r\n//       return () => clearInterval(interval);\r\n//     }\r\n//   }, [filter]);\r\n\r\n//   const applyFilter = () => {\r\n//     const filteredProducts = originalProducts.filter((product) =>\r\n//       product.nombre_producto.toLowerCase().includes(filter.toLowerCase())\r\n//     );\r\n//     setVisibleProducts(filteredProducts);\r\n\r\n//     // Limpiar el intervalo si se aplica un filtro\r\n//     if (filter !== '') {\r\n//       clearInterval(interval);\r\n//     }\r\n//   };\r\n\r\n//   const handleFilterChange = (event) => {\r\n//     setFilter(event.target.value);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Lista de Productos</h1>\r\n//       <input\r\n//         type=\"text\"\r\n//         placeholder=\"Filtrar por nombre\"\r\n//         value={filter}\r\n//         onChange={handleFilterChange}\r\n//       />\r\n//       <button onClick={applyFilter}>Aplicar Filtro</button>\r\n//       <ProductList products={visibleProducts} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n  const [products, setProducts] = useState(productData);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const applyFilter = () => {\r\n  //   setTimeout(() => {\r\n  //     const filteredProducts = productData.filter((product) =>\r\n  //       product.nombre_producto.toLowerCase().includes(filter.toLowerCase())\r\n  //     );\r\n  //     setProducts(filteredProducts);\r\n  //   }, 1000);\r\n  // };\r\n    const filteredProducts = productData.filter((product) =>\r\n      product.nombre_producto.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n\r\n    setProducts(filteredProducts);\r\n\r\n    let index = 0;\r\n    const interval = setInterval(() => {\r\n      setProducts((prevProducts) => {\r\n        const updatedProducts = [...prevProducts];\r\n        if (index < updatedProducts.length) {\r\n          updatedProducts.splice(index, 1);\r\n          index++;\r\n        } else {\r\n          clearInterval(interval);\r\n        }\r\n        return updatedProducts;\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleFilterChange = event => {\r\n    setFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Lista de Productos</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Filtrar por nombre\"\r\n        value={filter}\r\n        onChange={handleFilterChange}\r\n      />\r\n      <button onClick={applyFilter}>Aplicar Filtro</button>\r\n      <ProductList products={products} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,WAAW,GAAG,CAClB;IACEC,GAAG,EAAE,QAAQ;IACbC,eAAe,EAAE,YAAY;IAC7BC,WAAW,EAAE,CACX;MAAEC,MAAM,EAAE,SAAS;MAAEC,YAAY,EAAE;IAAG,CAAC,EACvC;MAAED,MAAM,EAAE,SAAS;MAAEC,YAAY,EAAE;IAAG,CAAC,CACxC;IACDC,kBAAkB,EAAE,IAAIC,GAAG,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;IACnDC,aAAa,EAAE,CAAC,EAAE,EAAE,EAAE;EACxB,CAAC,EACD;IACEP,GAAG,EAAE,QAAQ;IACbC,eAAe,EAAE,YAAY;IAC7BC,WAAW,EAAE,CACX;MAAEC,MAAM,EAAE,SAAS;MAAEC,YAAY,EAAE;IAAG,CAAC,EACvC;MAAED,MAAM,EAAE,SAAS;MAAEC,YAAY,EAAE;IAAG,CAAC,CACxC;IACDC,kBAAkB,EAAE,IAAIC,GAAG,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;IACnDC,aAAa,EAAE,CAAC,EAAE,EAAE,EAAE;EACxB,CAAC,EACD;IACEP,GAAG,EAAE,QAAQ;IACbC,eAAe,EAAE,YAAY;IAC7BC,WAAW,EAAE,CACX;MAAEC,MAAM,EAAE,SAAS;MAAEC,YAAY,EAAE;IAAG,CAAC,EACvC;MAAED,MAAM,EAAE,SAAS;MAAEC,YAAY,EAAE;IAAG,CAAC,CACxC;IACDC,kBAAkB,EAAE,IAAIC,GAAG,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;IACnDC,aAAa,EAAE,CAAC,EAAE,EAAE,EAAE;EACxB,CAAC,CACF;;EAEH;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAIA;EACA;EACA;EACA;EACA;;EAEA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAACO,WAAW,CAAC;EACrD,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMoB,WAAW,GAAGA,CAAA,KAAM;IAC1B;IACA;IACA;IACA;IACA;IACA;IACA;IACE,MAAMC,gBAAgB,GAAGd,WAAW,CAACW,MAAM,CAAEI,OAAO,IAClDA,OAAO,CAACb,eAAe,CAACc,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,MAAM,CAACK,WAAW,CAAC,CAAC,CACrE,CAAC;IAEDN,WAAW,CAACI,gBAAgB,CAAC;IAE7B,IAAII,KAAK,GAAG,CAAC;IACb,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCV,WAAW,CAAEW,YAAY,IAAK;QAC5B,MAAMC,eAAe,GAAG,CAAC,GAAGD,YAAY,CAAC;QACzC,IAAIH,KAAK,GAAGI,eAAe,CAACC,MAAM,EAAE;UAClCD,eAAe,CAACE,MAAM,CAACN,KAAK,EAAE,CAAC,CAAC;UAChCA,KAAK,EAAE;QACT,CAAC,MAAM;UACLO,aAAa,CAACN,QAAQ,CAAC;QACzB;QACA,OAAOG,eAAe;MACxB,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAGD5B,SAAS,CAAC,MAAM;IACd,OAAO,MAAM+B,aAAa,CAACN,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,kBAAkB,GAAGC,KAAK,IAAI;IAClCf,SAAS,CAACe,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,oBACEhC,OAAA;IAAAiC,QAAA,gBACEjC,OAAA;MAAAiC,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BrC,OAAA;MACEsC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oBAAoB;MAChCP,KAAK,EAAElB,MAAO;MACd0B,QAAQ,EAAEX;IAAmB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFrC,OAAA;MAAQyC,OAAO,EAAEzB,WAAY;MAAAiB,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrDrC,OAAA,CAACF,WAAW;MAACc,QAAQ,EAAEA;IAAS;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV,CAAC;AAACnC,EAAA,CAnPID,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AAqPT,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}